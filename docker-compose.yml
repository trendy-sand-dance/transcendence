services:
  caddy:
    image: caddy
    ports:
      - "8000:8000"
      # Caddy test page is running on `80` interally, but we just ignore that.
      # - "8000:80"
    volumes:
    - ./Caddyfile:/etc/caddy/Caddyfile
    - caddy_data:/data
    networks:
     - caddy

  frontend:
    # UNCOMMENT - Local Build
    extends:
      file: ${PATH_BUILD_FRONTEND}/docker-compose.yml
      service: frontend
    build:
      context: "${PATH_BUILD_FRONTEND}"
      target: development
    # UNCOMMENT - Local Build
    image: "${PATH_IMAGE_FRONTEND}"
    env_file:
      - .env
    environment:
      LOCAL_GAMESERVER_URL: "${LOCAL_IP}"
    tty: false
    networks:
      - caddy

  user-management:
    # UNCOMMENT - Local Build
    extends:
      file: ${PATH_BUILD_USERMANAGEMENT}/docker-compose.yml
      service: user-management
    build:
      context: "${PATH_BUILD_USERMANAGEMENT}"
      target: development
  # UNCOMMENT - Local Build
    image: "${PATH_IMAGE_USERMANAGEMENT}"
    environment:
      LISTEN_PORT: 3000
      LISTEN_ADDRESS: '0.0.0.0'
      DATABASE_URL: http://database_container:3000
    tty: false
    networks:
      - caddy

  database:
    # UNCOMMENT - Local Build
    extends:
      file: ${PATH_BUILD_DATABASE}/docker-compose.yml
      service: database
    build:
      context: "${PATH_BUILD_DATABASE}"
      target: development
  # UNCOMMENT - Local Build
    image: "${PATH_IMAGE_DATABASE}"
    environment:
      LISTEN_PORT: 3000
      LISTEN_ADDRESS: '0.0.0.0'
      DATABASE_URL: "file:/app/src/database/database.db"
    tty: false
    networks:
      - caddy

  gameserver:
    # UNCOMMENT - Local Build
    extends:
      file: ${PATH_BUILD_GAMESERVER}/docker-compose.yml
      service: gameserver
    build:
      context: "${PATH_BUILD_GAMESERVER}"
      target: development
  # UNCOMMENT - Local Build
    image: "${PATH_IMAGE_GAMESERVER}"
    environment:
      LISTEN_PORT: 3000
      LISTEN_ADDRESS: '0.0.0.0'
      DATABASE_URL: http://database_container:3000
      USERMANAGEMENT_URL: http://user_container:3000
    tty: false
    networks:
      - caddy

  chat:
    # UNCOMMENT - Local Build
    extends:
      file: ${PATH_BUILD_CHAT}/docker-compose.yml
      service: chat
    build: 
      context: "${PATH_BUILD_CHAT}"
      target: development
    # UNCOMMENT - Local Build
    image: "${PATH_IMAGE_CHAT}"
    environment:
      LISTEN_PORT: 3000
      LISTEN_ADDRESS: '0.0.0.0'
      DATABASE_URL: http://database_container:3000
    tty: false
    networks:
      - caddy

volumes:
  database_data:
  caddy_data:

networks:
  caddy:
